{"version":3,"sources":["util/meta.js","util/template.js","util/maker.js","util/parser.js","App.js","serviceWorker.js","index.js"],"names":["META","2","name","type","length","default","3","4","11","12","14","18","22","35","37","38","39","48","content","55","57","58","59","61","62","TEMPLATE","makeValue","value","test","Error","ll","Math","pow","llHex","toString","padStart","padEnd","strToHex","str","result","i","push","charCodeAt","join","valueToMsg","mti","values","bitMap","message","Object","keys","key","meta","hex","contents","contentValueHexArr","cvalue","ctype","clength","chex","e","error","idx","msg","contentValueHex","bitMapStrArr","bit","j","indexOf","parseInt","parseValue","start","end","substring","nLength","valueHex","hexToStr","byte","String","fromCharCode","msgToValue","bitMapArr","map","charAt","index","App","props","origin","forEach","k","m","c","t","state","MTI","className","onChange","setState","target","this","handleTemplate","onClick","handleClear","handleChangeI","handleChangeO","handleOut","handleIn","v","l","alert","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ad0701dd.chunk.js","sourcesContent":["const META = {\r\n    2: {\r\n        name: '会員番号・口座番号(PAN)',\r\n        type: 'n',\r\n        length: -2,\r\n        default: ''\r\n    },\r\n    3: {\r\n        name: 'プロセシングコード',\r\n        type: 'n',\r\n        length: 6,\r\n        default: '000000'\r\n    },\r\n    4: {\r\n        name: '取引金額',\r\n        type: 'n',\r\n        length: 12,\r\n        default: '000000010000'\r\n    },\r\n    11: {\r\n        name: 'システムトレースオーディットナンバー',\r\n        type: 'n',\r\n        length: 6,\r\n        default: '000001'\r\n    },\r\n    12: {\r\n        name: '現地取引時刻(hhmmss)',\r\n        type: 'n',\r\n        length: 6,\r\n        default: '123005'\r\n    },\r\n    14: {\r\n        name: '有効期限',\r\n        type: 'n',\r\n        length: 4,\r\n        default: ''\r\n    },\r\n    18: {\r\n        name: '加盟店業種',\r\n        type: 'n',\r\n        length: 4,\r\n        default: ''\r\n    },\r\n    22: {\r\n        name: 'POS入力モード',\r\n        type: 'n',\r\n        length: 3,\r\n        default: '070'\r\n    },\r\n    35: {\r\n        name: 'トラック2データ',\r\n        type: 'z',\r\n        length: -2,\r\n        default: '4761739001010119d271220112345678'\r\n    },\r\n    37: {\r\n        name: 'リトリーバルリファレンスナンバー',\r\n        type: 's',\r\n        length: 12,\r\n        default: ''\r\n    },\r\n    38: {\r\n        name: '承認コード',\r\n        type: 's',\r\n        length: 6,\r\n        default: ''\r\n    },\r\n    39: {\r\n        name: 'レスポンスコード',\r\n        type: 's',\r\n        length: 2,\r\n        default: ''\r\n    },\r\n    48: {\r\n        name: '個社用追加データ',\r\n        type: 'c',\r\n        content: [\r\n            {\r\n                name: '売上件数',\r\n                type: 's',\r\n                length: 6,\r\n                default: '000000'\r\n            },\r\n            {\r\n                name: '売上金額',\r\n                type: 's',\r\n                length: 8,\r\n                default: '00000000'\r\n            },\r\n            {\r\n                name: '取消件数',\r\n                type: 's',\r\n                length: 6,\r\n                default: '000000'\r\n            },\r\n            {\r\n                name: '取消金額',\r\n                type: 's',\r\n                length: 8,\r\n                default: '00000000'\r\n            }\r\n        ]\r\n    },\r\n    55: {\r\n        name: 'IC格納データ',\r\n        type: 'h',\r\n        length: -3,\r\n        default: '8407A00000000410105F3401019F26089A28957C62702EC69F2701809F1008010103A4000022DD9F3704FF7E73059F360100950500000088009A031411109C01009F02060000000200005F2A020392820258009F1A0203929F03060000000000009F3303E0B0C89F34034103029F3501229F1E0835333800000000005A0852500243210799999F21031334149F08020002'\r\n    },\r\n    57: {\r\n        name: 'エラーコード',\r\n        type: 's',\r\n        length: 4,\r\n        default: ''\r\n    },\r\n    58: {\r\n        name: '各国用予約域',\r\n        type: 'c',\r\n        content: [\r\n            {\r\n                name: '業務区分',\r\n                type: 's',\r\n                length: 2,\r\n                default: '01'\r\n            },\r\n            {\r\n                name: 'TID',\r\n                type: 's',\r\n                length: 13,\r\n                default: '9999500000005'\r\n            },\r\n            {\r\n                name: '処理年月日',\r\n                type: 's',\r\n                length: 6,\r\n                default: '200922'\r\n            },\r\n            {\r\n                name: 'カード区分',\r\n                type: 's',\r\n                length: 1,\r\n                default: '5'\r\n            },\r\n            {\r\n                name: '取消・返品区分',\r\n                type: 's',\r\n                length: 1,\r\n                default: ' '\r\n            },\r\n            {\r\n                name: '取扱区分',\r\n                type: 's',\r\n                length: 3,\r\n                default: '   '\r\n            },\r\n            {\r\n                name: '伝票番号',\r\n                type: 's',\r\n                length: 5,\r\n                default: '     '\r\n            },\r\n            {\r\n                name: 'mPOSフラグ',\r\n                type: 's',\r\n                length: 1,\r\n                default: '0'\r\n            },\r\n            {\r\n                name: '商品コード',\r\n                type: 's',\r\n                length: 7,\r\n                default: '0000000'\r\n            },\r\n            {\r\n                name: '自動取消フラグ',\r\n                type: 's',\r\n                length: 1,\r\n                default: '0'\r\n            },\r\n            {\r\n                name: 'dukpt用KSN',\r\n                type: 'b',\r\n                length: 80,\r\n                default: '00000000000000000000'\r\n            },\r\n            {\r\n                name: 'dukpt用JIS1Track2MAC',\r\n                type: 'b',\r\n                length: 64,\r\n                default: '0011223344556677'\r\n            },\r\n            {\r\n                name: '予備',\r\n                type: 's',\r\n                length: 8,\r\n                default: '        '\r\n            },\r\n            {\r\n                name: 'IC格納データ部用MAC',\r\n                type: 'b',\r\n                length: 64,\r\n                default: '0011223344556677'\r\n            },\r\n        ]\r\n    },\r\n    59: {\r\n        name: '支払方法',\r\n        type: 's',\r\n        length: -3,\r\n        default: ''\r\n    },\r\n    61: {\r\n        name: '予約域',\r\n        type: 'h',\r\n        length: -3,\r\n        default: ''\r\n    },\r\n    62: {\r\n        name: 'VCT域',\r\n        type: 'c',\r\n        content: [\r\n            {\r\n                name: 'VCT取引識別',\r\n                type: 's',\r\n                length: 1,\r\n                default: '1'\r\n            },\r\n            {\r\n                name: 'VCTオーソリリカバリ識別',\r\n                type: 's',\r\n                length: 1,\r\n                default: '1'\r\n            },\r\n            {\r\n                name: '受け渡しトランザクションID',\r\n                type: 's',\r\n                length: 15,\r\n                default: '               '\r\n            },\r\n            {\r\n                name: '受け取りトランザクションID',\r\n                type: 's',\r\n                length: 15,\r\n                default: '               '\r\n            },\r\n            {\r\n                name: '受け取りPaynetAccountReference',\r\n                type: 's',\r\n                length: 29,\r\n                default: '                             '\r\n            },\r\n        ]\r\n    },\r\n}\r\n\r\nexport default META\r\n","const TEMPLATE = {\r\n    'VCT-AUTH-IC': {\r\n        3: '000000',\r\n        4: '000000010000',\r\n        11: '000001',\r\n        12: '123005',\r\n        22: '070',\r\n        35: '4761739001010119d271220112345678',\r\n        48: ['000000', '00000000', '000000', '00000000'],\r\n        55: '8407A00000000410105F3401019F26089A28957C62702EC69F2701809F1008010103A4000022DD9F3704FF7E73059F360100950500000088009A031411109C01009F02060000000200005F2A020392820258009F1A0203929F03060000000000009F3303E0B0C89F34034103029F3501229F1E0835333800000000005A0852500243210799999F21031334149F08020002',\r\n        58: ['01', '9999500000005', '200922', '5', ' ', '   ', '     ', '0', '0000000', '0', '00000000000000000000', '0011223344556677', '        ', '0011223344556677'],\r\n        62: ['1', '1', '               ', '               ', '                             ']\r\n    },\r\n    'VCT-SALE2-IC': {\r\n        3: '003000',\r\n        4: '000000010000',\r\n        11: '000001',\r\n        12: '123005',\r\n        18: '5999',\r\n        22: '070',\r\n        35: '4761739001010119d271220112345678',\r\n        38: '831000',\r\n        48: ['000000', '00000000', '000000', '00000000'],\r\n        55: '8407A00000000410105F3401019F26089A28957C62702EC69F2701809F1008010103A4000022DD9F3704FF7E73059F360100950500000088009A031411109C01009F02060000000200005F2A020392820258009F1A0203929F03060000000000009F3303E0B0C89F34034103029F3501229F1E0835333800000000005A0852500243210799999F21031334149F08020002',\r\n        58: ['01', '9999500000005', '200922', '5', ' ', '   ', '     ', '0', '0000000', '0', '00000000000000000000', '0011223344556677', '        ', '0011223344556677'],\r\n        59: '10@',\r\n        62: ['1', '0', '               ', '               ', '                             ']\r\n    }\r\n}\r\n\r\nexport default TEMPLATE\r\n","import META from './meta.js'\r\n\r\nfunction valueToMsg(mti, values) {\r\n    const keys = Object.keys(values)\r\n    const bitMap = []\r\n    const message = []\r\n    for (const key of keys) {\r\n        if (values[key] && META[key]) {\r\n            const meta = META[key]\r\n            const value = values[key]\r\n            const {type, length} = meta\r\n            let hex = ''\r\n            if (type === 'c') {\r\n                const {content: contents} = meta\r\n                const contentValueHexArr = []\r\n                for (let i = 0; i < contents.length; i++) {\r\n                    const content = contents[i]\r\n                    const cvalue = value[i]\r\n                    const {type: ctype, length: clength} = content\r\n                    try {\r\n                        const chex = makeValue(ctype, clength, cvalue)\r\n                        contentValueHexArr.push(chex)\r\n                    } catch (e) {\r\n                        return {\r\n                            error: true,\r\n                            key,\r\n                            idx: i,\r\n                            msg: e.message\r\n                        }\r\n                    }\r\n                }\r\n                const contentValueHex = contentValueHexArr.join('')\r\n                if (contentValueHex) {\r\n                    const ll = contentValueHex.length / 2\r\n                    const llHex = ll.toString().padStart(4, '0')\r\n                    hex = llHex + contentValueHex\r\n                }\r\n            } else {\r\n                try {\r\n                    hex = makeValue(type, length, value)\r\n                } catch (e) {\r\n                    return {\r\n                        error: true,\r\n                        key,\r\n                        msg: e.message\r\n                    }\r\n                }\r\n            }\r\n            if (hex) {\r\n                bitMap.push(key)\r\n                message.push(hex)\r\n            }\r\n        }\r\n    }\r\n    const bitMapStrArr = []\r\n    for (let i = 0; i < 8; i++) {\r\n        const bit = []\r\n        for (let j = 0; j < 8; j++) {\r\n            const idx = i * 8 + j + 1\r\n            if (bitMap.indexOf(idx.toString(10)) !== -1) {\r\n                bit.push(1)\r\n            } else {\r\n                bit.push(0)\r\n            }\r\n        }\r\n        let hex = parseInt(bit.join(''), 2).toString(16)\r\n        hex = hex.padStart(2, '0')\r\n        bitMapStrArr.push(hex)\r\n    }\r\n    const bitMapHex = bitMapStrArr.join('')\r\n    const msg = '6000190000' + mti + bitMapHex + message.join('')\r\n    const tlength = (msg.length + 4) / 2\r\n    return tlength.toString(16).padStart(4, '0') + msg\r\n}\r\n\r\nfunction makeValue(type, length, value) {\r\n    if (!value) {\r\n        return\r\n    }\r\n    if (type === 'z') {\r\n        const hexReg = /^[0-9a-fA-F]*$/\r\n        if (!hexReg.test(value)) {\r\n            throw new Error('必须为16进制字符串')\r\n        }\r\n        let ll = -length\r\n        length = value.length\r\n        if (length >= Math.pow(10, ll)) {\r\n            throw new Error('长度过长')\r\n        }\r\n        if (ll % 2 === 1) {\r\n            ll = ll + 1\r\n        }\r\n        const llHex = length.toString().padStart(ll, '0')\r\n        if (length % 2 === 1) {\r\n            length = length + 1\r\n        }\r\n        const valueHex = value.padEnd(length, '0')\r\n        return llHex + valueHex\r\n    }\r\n    if (type === 'n') {\r\n        const hexReg = /^[0-9]*$/\r\n        if (!hexReg.test(value)) {\r\n            throw new Error('必须为数字')\r\n        }\r\n        if (length > 0) {\r\n            if (value.length !== length) {\r\n                throw new Error('长度错误')\r\n            }\r\n            if (length % 2 === 1) {\r\n                length = length + 1\r\n            }\r\n            if (value.length < length) {\r\n                value = value.padStart(length, '0')\r\n            }\r\n            return value\r\n        } else {\r\n            let ll = -length\r\n            length = value.length\r\n            if (length >= Math.pow(10, ll)) {\r\n                throw new Error('长度过长')\r\n            }\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = length.toString().padStart(ll, '0')\r\n            if (length % 2 === 1) {\r\n                length = length + 1\r\n            }\r\n            const valueHex = value.padStart(length, '0')\r\n            return llHex + valueHex\r\n        }\r\n    }\r\n    if (type === 's') {\r\n        // eslint-disable-next-line no-control-regex\r\n        const hexReg = /^[\\x00-\\xff]*$/\r\n        if (!hexReg.test(value)) {\r\n            throw new Error('必须为字符')\r\n        }\r\n        if (length > 0) {\r\n            if (value.length !== length) {\r\n                throw new Error('长度错误')\r\n            }\r\n            return strToHex(value)\r\n        } else {\r\n            let ll = -length\r\n            length = value.length\r\n            if (length >= Math.pow(10, ll)) {\r\n                throw new Error('长度过长')\r\n            }\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = length.toString().padStart(ll, '0')\r\n            const valueHex = strToHex(value)\r\n            return llHex + valueHex\r\n        }\r\n    }\r\n    if (type === 'h') {\r\n        const hexReg = /^[0-9a-fA-F]*$/\r\n        if (!hexReg.test(value)) {\r\n            throw new Error('必须为16进制字符串')\r\n        }\r\n        if (length > 0) {\r\n            if (value.length !== length * 2) {\r\n                throw new Error('长度错误')\r\n            }\r\n            return value\r\n        } else {\r\n            if (value.length % 2 === 1) {\r\n                throw new Error('必须为16进制字符串')\r\n            }\r\n            let ll = -length\r\n            length = value.length / 2\r\n            if (length >= Math.pow(10, ll)) {\r\n                throw new Error('长度过长')\r\n            }\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = length.toString().padStart(ll, '0')\r\n            return llHex + value\r\n        }\r\n    }\r\n    if (type === 'b') {\r\n        const hexReg = /^[0-9a-fA-F]*$/\r\n        if (!hexReg.test(value)) {\r\n            throw new Error('必须为16进制字符串')\r\n        }\r\n        if (value.length * 4 !== length) {\r\n            throw new Error('长度错误')\r\n        }\r\n        return value\r\n    }\r\n}\r\n\r\nfunction strToHex(str) {\r\n    if (str) {\r\n        const result = []\r\n        for (let i = 0; i < str.length; i++) {\r\n            result.push(str.charCodeAt(i).toString(16))\r\n        }\r\n        return result.join('')\r\n    }\r\n    return ''\r\n}\r\n\r\nexport default valueToMsg\r\n","import META from './meta';\r\n\r\nfunction msgToValue(msg) {\r\n    if (msg.length < 34) {\r\n        return {\r\n            error: true,\r\n            msg: '电文长度不正确'\r\n        }\r\n    }\r\n    const bitMap = msg.substring(18, 34)\r\n    const bitMapArr = []\r\n    for (let i = 0; i < 8; i++) {\r\n        const bit = bitMap.substring(i * 2, i * 2 + 2)\r\n        const map = parseInt(bit, 16).toString(2).padStart(8, '0')\r\n        for (let j = 0; j < 8; j++) {\r\n            if (map.charAt(j) === '1') {\r\n                bitMapArr.push((i * 8 + j + 1).toString())\r\n            }\r\n        }\r\n    }\r\n    const keys = Object.keys(META)\r\n    let index = 34\r\n    const values = {}\r\n    for (let key of bitMapArr) {\r\n        if (keys.indexOf(key) === -1) {\r\n            return {\r\n                error: true,\r\n                msg: 'bitmap不正确'\r\n            }\r\n        }\r\n        const meta = META[key]\r\n        const {type, length} = meta\r\n        if (type === 'c') {\r\n            index += 4\r\n            values[key] = []\r\n            const {content: contents} = meta\r\n            for (let i = 0; i < contents.length; i++) {\r\n                const content = contents[i]\r\n                const {type: ctype, length: clength} = content\r\n                try {\r\n                    const result = parseValue(msg, ctype, clength, index)\r\n                    values[key].push(result.value)\r\n                    index = result.end\r\n                } catch (e) {\r\n                    return {\r\n                        error: true,\r\n                        key,\r\n                        idx: i,\r\n                        msg: '电文长度不正确'\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            try {\r\n                const result = parseValue(msg, type, length, index)\r\n                values[key] = (result.value)\r\n                index = result.end\r\n            } catch (e) {\r\n                return {\r\n                    error: true,\r\n                    key,\r\n                    msg: '电文长度不正确'\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return values\r\n}\r\n\r\nfunction parseValue(msg, type, length, start) {\r\n    let end = start\r\n    if (type === 'z') {\r\n        let ll = -length\r\n        if (ll % 2 === 1) {\r\n            ll = ll + 1\r\n        }\r\n        const llHex = msg.substring(end, end += ll)\r\n        length = parseInt(llHex, 10)\r\n        let nLength = length\r\n        if (length % 2 === 1) {\r\n            nLength = length + 1\r\n        }\r\n        const valueHex = msg.substring(end, end += nLength).substring(0, length)\r\n        return {\r\n            end,\r\n            value: valueHex\r\n        }\r\n    }\r\n    if (type === 'n') {\r\n        if (length > 0) {\r\n            let nLength = length\r\n            if (length % 2 === 1) {\r\n                nLength = length + 1\r\n            }\r\n            const valueHex = msg.substring(end, end += nLength).substring(0, length)\r\n            return {\r\n                end,\r\n                value: valueHex\r\n            }\r\n        } else {\r\n            let ll = -length\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = msg.substring(end, end += ll)\r\n            length = parseInt(llHex, 10)\r\n            let nLength = length\r\n            if (length % 2 === 1) {\r\n                nLength = length + 1\r\n            }\r\n            let valueHex = msg.substring(end, end += nLength)\r\n            valueHex = valueHex.substring(valueHex.length - length, valueHex.length)\r\n            return {\r\n                end,\r\n                value: valueHex\r\n            }\r\n        }\r\n    }\r\n    if (type === 's') {\r\n        if (length > 0) {\r\n            const valueHex = msg.substring(end, end += length * 2)\r\n            return {\r\n                end,\r\n                value: hexToStr(valueHex)\r\n            }\r\n        } else {\r\n            let ll = -length\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = msg.substring(end, end += ll)\r\n            length = parseInt(llHex, 10)\r\n            const valueHex = msg.substring(end, end += length * 2)\r\n            return {\r\n                end,\r\n                value: hexToStr(valueHex)\r\n            }\r\n        }\r\n    }\r\n    if (type === 'h') {\r\n        if (length > 0) {\r\n            const valueHex = msg.substring(end, end += length * 2)\r\n            return {\r\n                end,\r\n                value: valueHex\r\n            }\r\n        } else {\r\n            let ll = -length\r\n            if (ll % 2 === 1) {\r\n                ll = ll + 1\r\n            }\r\n            const llHex = msg.substring(end, end += ll)\r\n            length = parseInt(llHex, 10)\r\n            const valueHex = msg.substring(end, end += length * 2)\r\n            return {\r\n                end,\r\n                value: valueHex\r\n            }\r\n        }\r\n    }\r\n    if (type === 'b') {\r\n        const valueHex = msg.substring(end, end += length / 4)\r\n        return {\r\n            end,\r\n            value: valueHex\r\n        }\r\n    }\r\n}\r\n\r\nfunction hexToStr(hex) {\r\n    if (hex) {\r\n        const result = []\r\n        for (let i = 0; i < hex.length / 2; i++) {\r\n            const byte = hex.substring(i * 2, i * 2 + 2)\r\n            result.push(String.fromCharCode(parseInt(byte, 16)))\r\n        }\r\n        return result.join('')\r\n    }\r\n    return ''\r\n}\r\n\r\nexport default msgToValue\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport META from './util/meta.js'\nimport TEMPLATE from './util/template.js'\nimport valueToMsg from './util/maker.js'\nimport msgToValue from './util/parser.js'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        const origin = {}\n        Object.keys(META).forEach(k => {\n            const m = META[k]\n            const c = m.content\n            if (c) {\n                if (!origin[k]) {\n                    origin[k] = []\n                }\n                c.forEach(t => {\n                    origin[k].push(t.default)\n                })\n            } else {\n                origin[k] = m.default\n            }\n        })\n        this.state = {\n            MTI: '0204',\n            values: origin,\n            hex: ''\n        }\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <label className='header'>MTI</label>\n                <input\n                    onChange={(e) => {\n                        this.setState({\n                            ...this.state,\n                            MTI: e.target.value\n                        })\n                    }}\n                    value={this.state.MTI}\n                />\n                <select\n                    onChange={(e) => {\n                        this.handleTemplate(e)\n                    }}\n                >\n                    {Object.keys(TEMPLATE).map(k => {\n                        return (<option key={k} value={k}>{k}</option>)\n                    })}\n                </select>\n                <div>\n                    {Object.keys(META).map(k => {\n                            const m = META[k]\n                            const c = m.content\n                            return (\n                                <div className='itemo' key={k}>\n                                    {c && <button\n                                        onClick={() => {\n                                            this.handleClear(k)\n                                        }}>clear</button>}\n                                    <label>{m.name} (bit{k},{m.type}{m.length > 0 && m.length})</label>\n                                    {c ?\n                                        <div>\n                                            {c.map((t, idx) => {\n                                                return (\n                                                    <div className='itemi' key={idx}>\n                                                        <label>{t.name} ({t.type}{t.length > 0 && t.length})</label>\n                                                        <input\n                                                            onChange={(e) => {\n                                                                this.handleChangeI(e, k, idx)\n                                                            }}\n                                                            value={this.state.values[k][idx] || ''}\n                                                        />\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                        :\n                                        <input\n                                            onChange={(e) => {\n                                                this.handleChangeO(e, k)\n                                            }}\n                                            value={this.state.values[k] || ''}\n                                        />\n                                    }\n                                </div>\n                            )\n                        }\n                    )}\n                </div>\n                <button className='btn' onClick={() => {\n                    this.handleOut()\n                }}>make\n                </button>\n                <button className='btn' onClick={() => {\n                    this.handleIn()\n                }}>parse\n                </button>\n                <textarea\n                    onChange={(e) => {\n                        this.setState({\n                            ...this.state,\n                            hex: e.target.value\n                        })\n                    }}\n                    value={this.state.hex}\n                />\n            </div>\n        );\n    }\n\n    handleTemplate(e) {\n        const v = e.target.value\n        this.setState({\n            ...this.state,\n            values: TEMPLATE[v]\n        })\n    }\n\n    handleChangeO(e, k) {\n        const v = e.target.value\n        const origin = {\n            ...this.state.values\n        }\n        origin[k] = v\n        this.setState({\n            ...this.state,\n            values: origin\n        })\n    }\n\n    handleChangeI(e, k, idx) {\n        const v = e.target.value\n        const origin = {\n            ...this.state.values\n        }\n        const l = origin[k]\n        l[idx] = v\n        origin[k] = l\n        this.setState({\n            ...this.state,\n            values: origin\n        })\n    }\n\n    handleOut() {\n        const origin = {\n            ...this.state.values\n        }\n        const result = valueToMsg(this.state.MTI, origin)\n        if (result.error) {\n            if (result.idx === 0 || result.idx) {\n                alert(`${result.msg} (${META[result.key].content[result.idx].name})`)\n            } else {\n                alert(`${result.msg} (${META[result.key].name})`)\n            }\n        } else {\n            this.setState({\n                ...this.state,\n                hex: result\n            })\n        }\n    }\n\n    handleIn() {\n        const result = msgToValue(this.state.hex)\n        if (result.error) {\n            if (result.idx === 0 || result.idx) {\n                alert(`${result.msg} (${META[result.key].content[result.idx].name})`)\n            } else if (result.key) {\n                alert(`${result.msg} (${META[result.key].name})`)\n            } else {\n                alert(`${result.msg}`)\n            }\n        } else {\n            this.setState({\n                ...this.state,\n                values: result\n            })\n        }\n    }\n\n    handleClear(k) {\n        const origin = {\n            ...this.state.values\n        }\n        const l = origin[k]\n        for (let i = 0; i < l.length; i++) {\n            l[i] = ''\n        }\n        origin[k] = l\n        this.setState({\n            ...this.state,\n            values: origin\n        })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}